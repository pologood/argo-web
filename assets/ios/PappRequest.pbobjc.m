// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PAppRequest.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers_RuntimeSupport.h>
#else
 #import "GPBProtocolBuffers_RuntimeSupport.h"
#endif

 #import "PappRequest.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

#pragma mark - PappRequestRoot

@implementation PappRequestRoot

@end

#pragma mark - PappRequestRoot_FileDescriptor

static GPBFileDescriptor *PappRequestRoot_FileDescriptor(void) {
  // This is called by +initialize so there is no need to worry
  // about thread safety of the singleton.
  static GPBFileDescriptor *descriptor = NULL;
  if (!descriptor) {
    GPBDebugCheckRuntimeVersion();
    descriptor = [[GPBFileDescriptor alloc] initWithPackage:@""
                                                     syntax:GPBFileSyntaxProto2];
  }
  return descriptor;
}

#pragma mark - PAppRequestParam

@implementation PAppRequestParam

@dynamic hasName, name;
@dynamic hasIntValue, intValue;
@dynamic hasStrValue, strValue;
@dynamic hasLongValue, longValue;
@dynamic hasFloatValue, floatValue;
@dynamic hasBoolValue, boolValue;
@dynamic hasBytesValue, bytesValue;

typedef struct PAppRequestParam__storage_ {
  uint32_t _has_storage_[1];
  int32_t intValue;
  float floatValue;
  NSString *name;
  NSString *strValue;
  NSData *bytesValue;
  int64_t longValue;
} PAppRequestParam__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "name",
        .dataTypeSpecific.className = NULL,
        .number = PAppRequestParam_FieldNumber_Name,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PAppRequestParam__storage_, name),
        .flags = GPBFieldRequired,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "intValue",
        .dataTypeSpecific.className = NULL,
        .number = PAppRequestParam_FieldNumber_IntValue,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PAppRequestParam__storage_, intValue),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "strValue",
        .dataTypeSpecific.className = NULL,
        .number = PAppRequestParam_FieldNumber_StrValue,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(PAppRequestParam__storage_, strValue),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "longValue",
        .dataTypeSpecific.className = NULL,
        .number = PAppRequestParam_FieldNumber_LongValue,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(PAppRequestParam__storage_, longValue),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "floatValue",
        .dataTypeSpecific.className = NULL,
        .number = PAppRequestParam_FieldNumber_FloatValue,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(PAppRequestParam__storage_, floatValue),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeFloat,
      },
      {
        .name = "boolValue",
        .dataTypeSpecific.className = NULL,
        .number = PAppRequestParam_FieldNumber_BoolValue,
        .hasIndex = 5,
        .offset = 6,  // Stored in _has_storage_ to save space.
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "bytesValue",
        .dataTypeSpecific.className = NULL,
        .number = PAppRequestParam_FieldNumber_BytesValue,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(PAppRequestParam__storage_, bytesValue),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeBytes,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PAppRequestParam class]
                                     rootClass:[PappRequestRoot class]
                                          file:PappRequestRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PAppRequestParam__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\006\002\010\000\003\010\000\004\t\000\005\n\000\006\t\000\007\n\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PAppRequest

@implementation PAppRequest

@dynamic hasAuthId, authId;
@dynamic hasSessionId, sessionId;
@dynamic hasVersion, version;
@dynamic hasSign, sign;
@dynamic hasNonce, nonce;
@dynamic hasUserAgent, userAgent;
@dynamic hasPath, path;
@dynamic paramArray, paramArray_Count;

typedef struct PAppRequest__storage_ {
  uint32_t _has_storage_[1];
  int32_t version;
  NSString *authId;
  NSString *sessionId;
  NSString *sign;
  NSString *nonce;
  NSString *userAgent;
  NSString *path;
  NSMutableArray *paramArray;
} PAppRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "authId",
        .dataTypeSpecific.className = NULL,
        .number = PAppRequest_FieldNumber_AuthId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PAppRequest__storage_, authId),
        .flags = GPBFieldRequired | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "sessionId",
        .dataTypeSpecific.className = NULL,
        .number = PAppRequest_FieldNumber_SessionId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PAppRequest__storage_, sessionId),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "version",
        .dataTypeSpecific.className = NULL,
        .number = PAppRequest_FieldNumber_Version,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(PAppRequest__storage_, version),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "sign",
        .dataTypeSpecific.className = NULL,
        .number = PAppRequest_FieldNumber_Sign,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(PAppRequest__storage_, sign),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "nonce",
        .dataTypeSpecific.className = NULL,
        .number = PAppRequest_FieldNumber_Nonce,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(PAppRequest__storage_, nonce),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "userAgent",
        .dataTypeSpecific.className = NULL,
        .number = PAppRequest_FieldNumber_UserAgent,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(PAppRequest__storage_, userAgent),
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "path",
        .dataTypeSpecific.className = NULL,
        .number = PAppRequest_FieldNumber_Path,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(PAppRequest__storage_, path),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "paramArray",
        .dataTypeSpecific.className = GPBStringifySymbol(PAppRequestParam),
        .number = PAppRequest_FieldNumber_ParamArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(PAppRequest__storage_, paramArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PAppRequest class]
                                     rootClass:[PappRequestRoot class]
                                          file:PappRequestRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PAppRequest__storage_)
                                         flags:0];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\003\001\006\000\002\t\000\006\t\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end


#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
