// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PAppSession.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_GEN_VERSION != 30001
#error This file was generated by a different version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

NS_ASSUME_NONNULL_BEGIN

#pragma mark - PappSessionRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface PappSessionRoot : GPBRootObject
@end

#pragma mark - PAppSession

typedef GPB_ENUM(PAppSession_FieldNumber) {
  PAppSession_FieldNumber_SessionId = 1,
  PAppSession_FieldNumber_RealName = 2,
  PAppSession_FieldNumber_UserName = 3,
  PAppSession_FieldNumber_UserId = 4,
  PAppSession_FieldNumber_Secret = 5,
  PAppSession_FieldNumber_SigninDate = 6,
  PAppSession_FieldNumber_ProfileImageURL = 7,
  PAppSession_FieldNumber_AppName = 8,
  PAppSession_FieldNumber_DeviceName = 9,
  PAppSession_FieldNumber_DeviceScreenSize = 10,
  PAppSession_FieldNumber_OsName = 11,
  PAppSession_FieldNumber_OsVersion = 12,
  PAppSession_FieldNumber_PackageVersion = 13,
  PAppSession_FieldNumber_PackageName = 14,
  PAppSession_FieldNumber_DeviceId = 15,
  PAppSession_FieldNumber_DeviceToken = 16,
  PAppSession_FieldNumber_ApnsEnabled = 17,
  PAppSession_FieldNumber_LatesAppVers = 18,
  PAppSession_FieldNumber_LocaleIdentifier = 19,
  PAppSession_FieldNumber_Latitude = 20,
  PAppSession_FieldNumber_Longitude = 21,
  PAppSession_FieldNumber_CityId = 22,
  PAppSession_FieldNumber_UserKind = 23,
  PAppSession_FieldNumber_UserDemo = 24,
};

@interface PAppSession : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *sessionId;
/** Test to see if @c sessionId has been set. */
@property(nonatomic, readwrite) BOOL hasSessionId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *realName;
/** Test to see if @c realName has been set. */
@property(nonatomic, readwrite) BOOL hasRealName;

@property(nonatomic, readwrite, copy, null_resettable) NSString *userName;
/** Test to see if @c userName has been set. */
@property(nonatomic, readwrite) BOOL hasUserName;

@property(nonatomic, readwrite) int64_t userId;

@property(nonatomic, readwrite) BOOL hasUserId;
@property(nonatomic, readwrite, copy, null_resettable) NSString *secret;
/** Test to see if @c secret has been set. */
@property(nonatomic, readwrite) BOOL hasSecret;

@property(nonatomic, readwrite, copy, null_resettable) NSString *signinDate;
/** Test to see if @c signinDate has been set. */
@property(nonatomic, readwrite) BOOL hasSigninDate;

@property(nonatomic, readwrite, copy, null_resettable) NSString *profileImageURL;
/** Test to see if @c profileImageURL has been set. */
@property(nonatomic, readwrite) BOOL hasProfileImageURL;

@property(nonatomic, readwrite, copy, null_resettable) NSString *appName;
/** Test to see if @c appName has been set. */
@property(nonatomic, readwrite) BOOL hasAppName;

@property(nonatomic, readwrite, copy, null_resettable) NSString *deviceName;
/** Test to see if @c deviceName has been set. */
@property(nonatomic, readwrite) BOOL hasDeviceName;

@property(nonatomic, readwrite, copy, null_resettable) NSString *deviceScreenSize;
/** Test to see if @c deviceScreenSize has been set. */
@property(nonatomic, readwrite) BOOL hasDeviceScreenSize;

@property(nonatomic, readwrite, copy, null_resettable) NSString *osName;
/** Test to see if @c osName has been set. */
@property(nonatomic, readwrite) BOOL hasOsName;

@property(nonatomic, readwrite, copy, null_resettable) NSString *osVersion;
/** Test to see if @c osVersion has been set. */
@property(nonatomic, readwrite) BOOL hasOsVersion;

@property(nonatomic, readwrite, copy, null_resettable) NSString *packageVersion;
/** Test to see if @c packageVersion has been set. */
@property(nonatomic, readwrite) BOOL hasPackageVersion;

@property(nonatomic, readwrite, copy, null_resettable) NSString *packageName;
/** Test to see if @c packageName has been set. */
@property(nonatomic, readwrite) BOOL hasPackageName;

@property(nonatomic, readwrite, copy, null_resettable) NSString *deviceId;
/** Test to see if @c deviceId has been set. */
@property(nonatomic, readwrite) BOOL hasDeviceId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *deviceToken;
/** Test to see if @c deviceToken has been set. */
@property(nonatomic, readwrite) BOOL hasDeviceToken;

@property(nonatomic, readwrite) int32_t apnsEnabled;

@property(nonatomic, readwrite) BOOL hasApnsEnabled;
@property(nonatomic, readwrite, copy, null_resettable) NSString *latesAppVers;
/** Test to see if @c latesAppVers has been set. */
@property(nonatomic, readwrite) BOOL hasLatesAppVers;

@property(nonatomic, readwrite, copy, null_resettable) NSString *localeIdentifier;
/** Test to see if @c localeIdentifier has been set. */
@property(nonatomic, readwrite) BOOL hasLocaleIdentifier;

@property(nonatomic, readwrite) float latitude;

@property(nonatomic, readwrite) BOOL hasLatitude;
@property(nonatomic, readwrite) float longitude;

@property(nonatomic, readwrite) BOOL hasLongitude;
@property(nonatomic, readwrite) int32_t cityId;

@property(nonatomic, readwrite) BOOL hasCityId;
@property(nonatomic, readwrite) int32_t userKind;

@property(nonatomic, readwrite) BOOL hasUserKind;
@property(nonatomic, readwrite) int32_t userDemo;

@property(nonatomic, readwrite) BOOL hasUserDemo;
@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
